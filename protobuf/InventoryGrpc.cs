// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: inventory.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace VBart.EventsDemo.Grpc {
  public static partial class InventoryService
  {
    static readonly string __ServiceName = "vbart.events_demo.inventory.api.InventoryService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> __Marshaller_vbart_events_demo_inventory_value_objects_Engine = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::VBart.EventsDemo.Grpc.ValueObjects.Engine.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::VBart.EventsDemo.Grpc.ValueObjects.Engines> __Marshaller_vbart_events_demo_inventory_value_objects_Engines = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::VBart.EventsDemo.Grpc.ValueObjects.Engines.Parser));
    static readonly grpc::Marshaller<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle.Parser));
    static readonly grpc::Marshaller<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles> __Marshaller_vbart_events_demo_inventory_value_objects_Vehicles = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles.Parser));

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine> __Method_AddEngine = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEngine",
        __Marshaller_vbart_events_demo_inventory_value_objects_Engine,
        __Marshaller_vbart_events_demo_inventory_value_objects_Engine);

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine> __Method_UpdateEngine = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEngine",
        __Marshaller_vbart_events_demo_inventory_value_objects_Engine,
        __Marshaller_vbart_events_demo_inventory_value_objects_Engine);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Engines> __Method_ListEngines = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Engines>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEngines",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_vbart_events_demo_inventory_value_objects_Engines);

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveEngine = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveEngine",
        __Marshaller_vbart_events_demo_inventory_value_objects_Engine,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> __Method_AddVehicle = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddVehicle",
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle,
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle);

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> __Method_UpdateVehicle = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateVehicle",
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle,
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles> __Method_ListVehicles = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVehicles",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicles);

    static readonly grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveVehicle = new grpc::Method<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveVehicle",
        __Marshaller_vbart_events_demo_inventory_value_objects_Vehicle,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::VBart.EventsDemo.Grpc.InventoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InventoryService</summary>
    [grpc::BindServiceMethod(typeof(InventoryService), "BindService")]
    public abstract partial class InventoryServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> AddEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> UpdateEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Engines> ListEngines(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RemoveEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> AddVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> UpdateVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles> ListVehicles(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RemoveVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for InventoryService</summary>
    public partial class InventoryServiceClient : grpc::ClientBase<InventoryServiceClient>
    {
      /// <summary>Creates a new client for InventoryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public InventoryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InventoryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public InventoryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected InventoryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected InventoryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engine AddEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engine AddEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddEngine, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> AddEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> AddEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddEngine, null, options, request);
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engine UpdateEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engine UpdateEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEngine, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> UpdateEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> UpdateEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEngine, null, options, request);
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engines ListEngines(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEngines(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Engines ListEngines(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEngines, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engines> ListEnginesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEnginesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Engines> ListEnginesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEngines, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveEngine(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveEngine, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveEngineAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Engine request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveEngine, null, options, request);
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle AddVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle AddVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddVehicle, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> AddVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> AddVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddVehicle, null, options, request);
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle UpdateVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle UpdateVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVehicle, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> UpdateVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> UpdateVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVehicle, null, options, request);
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles ListVehicles(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVehicles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles ListVehicles(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVehicles, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles> ListVehiclesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVehiclesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles> ListVehiclesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVehicles, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveVehicle(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveVehicle, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveVehicleAsync(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveVehicle, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override InventoryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InventoryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(InventoryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddEngine, serviceImpl.AddEngine)
          .AddMethod(__Method_UpdateEngine, serviceImpl.UpdateEngine)
          .AddMethod(__Method_ListEngines, serviceImpl.ListEngines)
          .AddMethod(__Method_RemoveEngine, serviceImpl.RemoveEngine)
          .AddMethod(__Method_AddVehicle, serviceImpl.AddVehicle)
          .AddMethod(__Method_UpdateVehicle, serviceImpl.UpdateVehicle)
          .AddMethod(__Method_ListVehicles, serviceImpl.ListVehicles)
          .AddMethod(__Method_RemoveVehicle, serviceImpl.RemoveVehicle).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InventoryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine>(serviceImpl.AddEngine));
      serviceBinder.AddMethod(__Method_UpdateEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::VBart.EventsDemo.Grpc.ValueObjects.Engine>(serviceImpl.UpdateEngine));
      serviceBinder.AddMethod(__Method_ListEngines, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Engines>(serviceImpl.ListEngines));
      serviceBinder.AddMethod(__Method_RemoveEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Engine, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.RemoveEngine));
      serviceBinder.AddMethod(__Method_AddVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle>(serviceImpl.AddVehicle));
      serviceBinder.AddMethod(__Method_UpdateVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle>(serviceImpl.UpdateVehicle));
      serviceBinder.AddMethod(__Method_ListVehicles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles>(serviceImpl.ListVehicles));
      serviceBinder.AddMethod(__Method_RemoveVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.RemoveVehicle));
    }

  }
}
#endregion
