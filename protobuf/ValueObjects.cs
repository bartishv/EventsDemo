// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: value_objects.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VBart.EventsDemo.Grpc.ValueObjects {

  /// <summary>Holder for reflection information generated from value_objects.proto</summary>
  public static partial class ValueObjectsReflection {

    #region Descriptor
    /// <summary>File descriptor for value_objects.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ValueObjectsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2YWx1ZV9vYmplY3RzLnByb3RvEil2YmFydC5ldmVudHNfZGVtby5pbnZl",
            "bnRvcnkudmFsdWVfb2JqZWN0cxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJz",
            "LnByb3RvIk0KB0VuZ2luZXMSQgoHZW5naW5lcxgBIAMoCzIxLnZiYXJ0LmV2",
            "ZW50c19kZW1vLmludmVudG9yeS52YWx1ZV9vYmplY3RzLkVuZ2luZSKGAgoG",
            "RW5naW5lEjEKC2VuZ2luZV91dWlkGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjIKDHZlaGljbGVfdXVpZBgCIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIbChN5ZWFyX29mX21hbnVmYWN0dXJlGAMg",
            "ASgFEhQKDG1hbnVmYWN0dXJlchgEIAEoCRIcChRtYXhpbXVtX2VuZ2luZV9z",
            "cGVlZBgFIAEoBRIgChhtYXhpbXVtX21pbGVhZ2VfcmVzb3VyY2UYBiABKAUS",
            "IgoacmVtYWluaW5nX21pbGVhZ2VfcmVzb3VyY2UYByABKAUiUAoIVmVoaWNs",
            "ZXMSRAoIdmVoaWNsZXMYASADKAsyMi52YmFydC5ldmVudHNfZGVtby5pbnZl",
            "bnRvcnkudmFsdWVfb2JqZWN0cy5WZWhpY2xlImkKB1ZlaGljbGUSMgoMdmVo",
            "aWNsZV91dWlkGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhsKE3llYXJfb2ZfbWFudWZhY3R1cmUYAiABKAUSDQoFbW9kZWwYAyABKAlC",
            "JaoCIlZCYXJ0LkV2ZW50c0RlbW8uR3JwYy5WYWx1ZU9iamVjdHNiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VBart.EventsDemo.Grpc.ValueObjects.Engines), global::VBart.EventsDemo.Grpc.ValueObjects.Engines.Parser, new[]{ "Engines_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VBart.EventsDemo.Grpc.ValueObjects.Engine), global::VBart.EventsDemo.Grpc.ValueObjects.Engine.Parser, new[]{ "EngineUuid", "VehicleUuid", "YearOfManufacture", "Manufacturer", "MaximumEngineSpeed", "MaximumMileageResource", "RemainingMileageResource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles), global::VBart.EventsDemo.Grpc.ValueObjects.Vehicles.Parser, new[]{ "Vehicles_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle), global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle.Parser, new[]{ "VehicleUuid", "YearOfManufacture", "Model" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Engines : pb::IMessage<Engines>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Engines> _parser = new pb::MessageParser<Engines>(() => new Engines());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Engines> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VBart.EventsDemo.Grpc.ValueObjects.ValueObjectsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engines() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engines(Engines other) : this() {
      engines_ = other.engines_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engines Clone() {
      return new Engines(this);
    }

    /// <summary>Field number for the "engines" field.</summary>
    public const int Engines_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> _repeated_engines_codec
        = pb::FieldCodec.ForMessage(10, global::VBart.EventsDemo.Grpc.ValueObjects.Engine.Parser);
    private readonly pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> engines_ = new pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Engine>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Engine> Engines_ {
      get { return engines_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Engines);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Engines other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!engines_.Equals(other.engines_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= engines_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      engines_.WriteTo(output, _repeated_engines_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      engines_.WriteTo(ref output, _repeated_engines_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += engines_.CalculateSize(_repeated_engines_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Engines other) {
      if (other == null) {
        return;
      }
      engines_.Add(other.engines_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            engines_.AddEntriesFrom(input, _repeated_engines_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            engines_.AddEntriesFrom(ref input, _repeated_engines_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Engine : pb::IMessage<Engine>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Engine> _parser = new pb::MessageParser<Engine>(() => new Engine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Engine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VBart.EventsDemo.Grpc.ValueObjects.ValueObjectsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engine(Engine other) : this() {
      EngineUuid = other.EngineUuid;
      VehicleUuid = other.VehicleUuid;
      yearOfManufacture_ = other.yearOfManufacture_;
      manufacturer_ = other.manufacturer_;
      maximumEngineSpeed_ = other.maximumEngineSpeed_;
      maximumMileageResource_ = other.maximumMileageResource_;
      remainingMileageResource_ = other.remainingMileageResource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Engine Clone() {
      return new Engine(this);
    }

    /// <summary>Field number for the "engine_uuid" field.</summary>
    public const int EngineUuidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_engineUuid_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string engineUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineUuid {
      get { return engineUuid_; }
      set {
        engineUuid_ = value;
      }
    }


    /// <summary>Field number for the "vehicle_uuid" field.</summary>
    public const int VehicleUuidFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_vehicleUuid_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string vehicleUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleUuid {
      get { return vehicleUuid_; }
      set {
        vehicleUuid_ = value;
      }
    }


    /// <summary>Field number for the "year_of_manufacture" field.</summary>
    public const int YearOfManufactureFieldNumber = 3;
    private int yearOfManufacture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YearOfManufacture {
      get { return yearOfManufacture_; }
      set {
        yearOfManufacture_ = value;
      }
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 4;
    private string manufacturer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maximum_engine_speed" field.</summary>
    public const int MaximumEngineSpeedFieldNumber = 5;
    private int maximumEngineSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaximumEngineSpeed {
      get { return maximumEngineSpeed_; }
      set {
        maximumEngineSpeed_ = value;
      }
    }

    /// <summary>Field number for the "maximum_mileage_resource" field.</summary>
    public const int MaximumMileageResourceFieldNumber = 6;
    private int maximumMileageResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaximumMileageResource {
      get { return maximumMileageResource_; }
      set {
        maximumMileageResource_ = value;
      }
    }

    /// <summary>Field number for the "remaining_mileage_resource" field.</summary>
    public const int RemainingMileageResourceFieldNumber = 7;
    private int remainingMileageResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainingMileageResource {
      get { return remainingMileageResource_; }
      set {
        remainingMileageResource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Engine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Engine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EngineUuid != other.EngineUuid) return false;
      if (VehicleUuid != other.VehicleUuid) return false;
      if (YearOfManufacture != other.YearOfManufacture) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (MaximumEngineSpeed != other.MaximumEngineSpeed) return false;
      if (MaximumMileageResource != other.MaximumMileageResource) return false;
      if (RemainingMileageResource != other.RemainingMileageResource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (engineUuid_ != null) hash ^= EngineUuid.GetHashCode();
      if (vehicleUuid_ != null) hash ^= VehicleUuid.GetHashCode();
      if (YearOfManufacture != 0) hash ^= YearOfManufacture.GetHashCode();
      if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
      if (MaximumEngineSpeed != 0) hash ^= MaximumEngineSpeed.GetHashCode();
      if (MaximumMileageResource != 0) hash ^= MaximumMileageResource.GetHashCode();
      if (RemainingMileageResource != 0) hash ^= RemainingMileageResource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (engineUuid_ != null) {
        _single_engineUuid_codec.WriteTagAndValue(output, EngineUuid);
      }
      if (vehicleUuid_ != null) {
        _single_vehicleUuid_codec.WriteTagAndValue(output, VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(YearOfManufacture);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Manufacturer);
      }
      if (MaximumEngineSpeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaximumEngineSpeed);
      }
      if (MaximumMileageResource != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaximumMileageResource);
      }
      if (RemainingMileageResource != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RemainingMileageResource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (engineUuid_ != null) {
        _single_engineUuid_codec.WriteTagAndValue(ref output, EngineUuid);
      }
      if (vehicleUuid_ != null) {
        _single_vehicleUuid_codec.WriteTagAndValue(ref output, VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(YearOfManufacture);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Manufacturer);
      }
      if (MaximumEngineSpeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaximumEngineSpeed);
      }
      if (MaximumMileageResource != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaximumMileageResource);
      }
      if (RemainingMileageResource != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RemainingMileageResource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (engineUuid_ != null) {
        size += _single_engineUuid_codec.CalculateSizeWithTag(EngineUuid);
      }
      if (vehicleUuid_ != null) {
        size += _single_vehicleUuid_codec.CalculateSizeWithTag(VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YearOfManufacture);
      }
      if (Manufacturer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (MaximumEngineSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumEngineSpeed);
      }
      if (MaximumMileageResource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumMileageResource);
      }
      if (RemainingMileageResource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainingMileageResource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Engine other) {
      if (other == null) {
        return;
      }
      if (other.engineUuid_ != null) {
        if (engineUuid_ == null || other.EngineUuid != "") {
          EngineUuid = other.EngineUuid;
        }
      }
      if (other.vehicleUuid_ != null) {
        if (vehicleUuid_ == null || other.VehicleUuid != "") {
          VehicleUuid = other.VehicleUuid;
        }
      }
      if (other.YearOfManufacture != 0) {
        YearOfManufacture = other.YearOfManufacture;
      }
      if (other.Manufacturer.Length != 0) {
        Manufacturer = other.Manufacturer;
      }
      if (other.MaximumEngineSpeed != 0) {
        MaximumEngineSpeed = other.MaximumEngineSpeed;
      }
      if (other.MaximumMileageResource != 0) {
        MaximumMileageResource = other.MaximumMileageResource;
      }
      if (other.RemainingMileageResource != 0) {
        RemainingMileageResource = other.RemainingMileageResource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_engineUuid_codec.Read(input);
            if (engineUuid_ == null || value != "") {
              EngineUuid = value;
            }
            break;
          }
          case 18: {
            string value = _single_vehicleUuid_codec.Read(input);
            if (vehicleUuid_ == null || value != "") {
              VehicleUuid = value;
            }
            break;
          }
          case 24: {
            YearOfManufacture = input.ReadInt32();
            break;
          }
          case 34: {
            Manufacturer = input.ReadString();
            break;
          }
          case 40: {
            MaximumEngineSpeed = input.ReadInt32();
            break;
          }
          case 48: {
            MaximumMileageResource = input.ReadInt32();
            break;
          }
          case 56: {
            RemainingMileageResource = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_engineUuid_codec.Read(ref input);
            if (engineUuid_ == null || value != "") {
              EngineUuid = value;
            }
            break;
          }
          case 18: {
            string value = _single_vehicleUuid_codec.Read(ref input);
            if (vehicleUuid_ == null || value != "") {
              VehicleUuid = value;
            }
            break;
          }
          case 24: {
            YearOfManufacture = input.ReadInt32();
            break;
          }
          case 34: {
            Manufacturer = input.ReadString();
            break;
          }
          case 40: {
            MaximumEngineSpeed = input.ReadInt32();
            break;
          }
          case 48: {
            MaximumMileageResource = input.ReadInt32();
            break;
          }
          case 56: {
            RemainingMileageResource = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vehicles : pb::IMessage<Vehicles>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vehicles> _parser = new pb::MessageParser<Vehicles>(() => new Vehicles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vehicles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VBart.EventsDemo.Grpc.ValueObjects.ValueObjectsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicles(Vehicles other) : this() {
      vehicles_ = other.vehicles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicles Clone() {
      return new Vehicles(this);
    }

    /// <summary>Field number for the "vehicles" field.</summary>
    public const int Vehicles_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> _repeated_vehicles_codec
        = pb::FieldCodec.ForMessage(10, global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle.Parser);
    private readonly pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> vehicles_ = new pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VBart.EventsDemo.Grpc.ValueObjects.Vehicle> Vehicles_ {
      get { return vehicles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vehicles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vehicles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vehicles_.Equals(other.vehicles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vehicles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      vehicles_.WriteTo(output, _repeated_vehicles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      vehicles_.WriteTo(ref output, _repeated_vehicles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vehicles_.CalculateSize(_repeated_vehicles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vehicles other) {
      if (other == null) {
        return;
      }
      vehicles_.Add(other.vehicles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vehicles_.AddEntriesFrom(input, _repeated_vehicles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            vehicles_.AddEntriesFrom(ref input, _repeated_vehicles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vehicle : pb::IMessage<Vehicle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vehicle> _parser = new pb::MessageParser<Vehicle>(() => new Vehicle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vehicle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VBart.EventsDemo.Grpc.ValueObjects.ValueObjectsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicle(Vehicle other) : this() {
      VehicleUuid = other.VehicleUuid;
      yearOfManufacture_ = other.yearOfManufacture_;
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vehicle Clone() {
      return new Vehicle(this);
    }

    /// <summary>Field number for the "vehicle_uuid" field.</summary>
    public const int VehicleUuidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_vehicleUuid_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string vehicleUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleUuid {
      get { return vehicleUuid_; }
      set {
        vehicleUuid_ = value;
      }
    }


    /// <summary>Field number for the "year_of_manufacture" field.</summary>
    public const int YearOfManufactureFieldNumber = 2;
    private int yearOfManufacture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YearOfManufacture {
      get { return yearOfManufacture_; }
      set {
        yearOfManufacture_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vehicle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vehicle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleUuid != other.VehicleUuid) return false;
      if (YearOfManufacture != other.YearOfManufacture) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (vehicleUuid_ != null) hash ^= VehicleUuid.GetHashCode();
      if (YearOfManufacture != 0) hash ^= YearOfManufacture.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (vehicleUuid_ != null) {
        _single_vehicleUuid_codec.WriteTagAndValue(output, VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(YearOfManufacture);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (vehicleUuid_ != null) {
        _single_vehicleUuid_codec.WriteTagAndValue(ref output, VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(YearOfManufacture);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (vehicleUuid_ != null) {
        size += _single_vehicleUuid_codec.CalculateSizeWithTag(VehicleUuid);
      }
      if (YearOfManufacture != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YearOfManufacture);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vehicle other) {
      if (other == null) {
        return;
      }
      if (other.vehicleUuid_ != null) {
        if (vehicleUuid_ == null || other.VehicleUuid != "") {
          VehicleUuid = other.VehicleUuid;
        }
      }
      if (other.YearOfManufacture != 0) {
        YearOfManufacture = other.YearOfManufacture;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_vehicleUuid_codec.Read(input);
            if (vehicleUuid_ == null || value != "") {
              VehicleUuid = value;
            }
            break;
          }
          case 16: {
            YearOfManufacture = input.ReadInt32();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_vehicleUuid_codec.Read(ref input);
            if (vehicleUuid_ == null || value != "") {
              VehicleUuid = value;
            }
            break;
          }
          case 16: {
            YearOfManufacture = input.ReadInt32();
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
